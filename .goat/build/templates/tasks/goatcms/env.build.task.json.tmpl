{{- define "goatcms.env_build_task_json" -}}

{{- $ctx := .ctx -}}
{{- $env := .env -}}
{{- $name := (index $ctx.Data (print $ctx.From ".name")) -}}
{{- $repoHost := (index $ctx.Data (print $ctx.From ".repo.host")) -}}
{{- $repo := (index $ctx.Data (print $ctx.From ".repo.path")) -}}
{{- $type := (index $ctx.Data (print $ctx.From ".type")) -}}
{{- $image := (index $ctx.Data (print $ctx.From ".docker.image")) -}}

{
  "name": "Build{{camelcaseuf $env}}{{camelcaseuf $name}}",
  "entrypoint": true,
  "extends": [
    "Clone{{camelcaseuf $env}}{{camelcaseuf $name}}",
    "BuildBackend{{camelcaseuf $env}}{{camelcaseuf $name}}",
    "BuildFrontend{{camelcaseuf $env}}{{camelcaseuf $name}}"
  ],
  "locks": ["/data/code/{{$repo}}-{{lower $env}}!deploy"],
  "executor": "onlylast",
  "trigger": ["Deploy{{camelcaseuf $env}}{{camelcaseuf $name}}"
{{- if eq $env "prod" -}}
  {{- range $index, $key := (keys $ctx.Data (print $ctx.From ".trigger.")) -}}
    {{- $name := (index $ctx.Data (print $ctx.From ".trigger." $key ".name")) -}}
    , "{{$name}}"
  {{- end -}}
{{- end -}}
  ],
  "script": {
    "cwd": "/data/code/{{$repo}}-{{lower $env}}/src/{{$repoHost}}/{{$repo}}",
    "commands": [{
      "command": "docker",
      "args": ["build", ".", "-t", "{{$repo}}:{{lower $env}}", "--no-cache"]
    }, {
      "command": "sh",
      "args": ["-x", "/app/config/helpers/docker-push.sh", "{{$repo}}:{{lower $env}}"]
    }]
  }
}


{{- end -}}
