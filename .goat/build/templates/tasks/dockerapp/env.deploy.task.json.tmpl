{{- define "dockerapp.env_deploy_task_json" -}}

{{- $ctx := .ctx -}}
{{- $env := .env -}}
{{- $branch := .branch -}}
{{- $port := .port -}}
{{- $host := .host -}}
{{- $cert := .cert -}}
{{- $name := (index $ctx.Data (print $ctx.From ".name")) -}}
{{- $repoHost := (index $ctx.Data (print $ctx.From ".repo.host")) -}}
{{- $repo := (index $ctx.Data (print $ctx.From ".repo.path")) -}}
{{- $type := (index $ctx.Data (print $ctx.From ".type")) -}}
{{- $image := (index $ctx.Data (print $ctx.From ".docker.image")) -}}
{{- $prodHost := (index $ctx.Data (print $ctx.From ".prod.host")) -}}

{
  "name": "Deploy{{camelcaseuf $env}}{{camelcaseuf $name}}",
  "entrypoint": true,
  "extends": [],
  "locks": ["docker!{{$image}}:{{camelcaself $env}}"],
  "executor": "onlylast",
  "script": {
    "commands": [{
      "command": "sh",
      "args": ["/app/config/helpers/cert-domain.sh", "{{$cert}}"]
    }, {
      "command": "sh",
      "args": ["/app/config/helpers/cert-deploy-{{lower $env}}.sh", "{{$repo}}", "{{camelcaself $env}}", "{{$cert}}"]
    }, {
      "command": "sh",
      "args": ["/app/config/tasks/{{$repo}}/{{lower $env}}/{{lower $env}}.deploy.config.sh", "{{$repo}}", "{{camelcaself $env}}", "{{$image}}:{{camelcaself $env}}"]
    }, {
      "command": "sh",
      "args": ["-x", "/app/config/helpers/docker-deploy-{{lower $env}}.sh", "{{$repo}}", "{{camelcaself $env}}", "{{$image}}:{{camelcaself $env}}"]
    }]
  }
}

{{- end -}}
